{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Layout/SplitScreen.tsx"],"sourcesContent":["import { ReactNode } from 'react';\n\ninterface SplitScreenProps {\n  sidebar: ReactNode;\n  content: ReactNode;\n}\n\nexport default function SplitScreen({ sidebar, content }: SplitScreenProps) {\n  return (\n    <div className=\"flex h-full\">\n      <div className=\"w-80 border-r\">\n        {sidebar}\n      </div>\n      <div className=\"flex-1\">\n        {content}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAOe,SAAS,YAAY,EAAE,OAAO,EAAE,OAAO,EAAoB;IACxE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACZ;;;;;;0BAEH,8OAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/services/openai.ts"],"sourcesContent":["import OpenAI from 'openai';\nimport { Assistant, Message } from '@/types';\n\nconst openai = new OpenAI({\n  apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true // Note: In production, you should use API routes\n});\n\nexport async function createAssistant(config: Partial<Assistant>) {\n  try {\n    const assistant = await openai.beta.assistants.create({\n      name: config.name,\n      instructions: config.instructions,\n      tools: (config.tools || []) as any,\n      model: config.model || \"gpt-4o\",\n      temperature: config.temperature,\n      top_p: config.top_p\n    });\n    return assistant;\n  } catch (error) {\n    console.error('Error creating assistant:', error);\n    throw error;\n  }\n}\n\nexport async function updateAssistant(assistantId: string, config: Partial<Assistant>) {\n  try {\n    const assistant = await openai.beta.assistants.update(\n      assistantId,\n      {\n        name: config.name,\n        instructions: config.instructions,\n        tools: (config.tools || []) as any,\n        model: config.model,\n        temperature: config.temperature,\n        top_p: config.top_p\n      }\n    );\n    return assistant;\n  } catch (error) {\n    console.error('Error updating assistant:', error);\n    throw error;\n  }\n}\n\nexport async function processMessage(assistantId: string, content: string) {\n  try {\n    const thread = await openai.beta.threads.create();\n    await openai.beta.threads.messages.create(thread.id, {\n      role: 'user',\n      content\n    });\n\n    const run = await openai.beta.threads.runs.create(thread.id, {\n      assistant_id: assistantId\n    });\n\n    // Poll for completion\n    const response = await openai.beta.threads.messages.list(thread.id);\n    const assistantMessage = response.data.find(msg => msg.role === 'assistant');\n    \n    if (!assistantMessage?.content[0]) return 'No response';\n    \n    const content_block = assistantMessage.content[0];\n    if (content_block.type === 'text') {\n      return content_block.text.value;\n    }\n    \n    return 'Unsupported response type';\n  } catch (error) {\n    console.error('Error processing message:', error);\n    throw error;\n  }\n} "],"names":[],"mappings":";;;;;AAAA;;AAGA,MAAM,SAAS,IAAI,gJAAA,CAAA,UAAM,CAAC;IACxB,MAAM;IACN,yBAAyB,KAAK,iDAAiD;AACjF;AAEO,eAAe,gBAAgB,MAA0B;IAC9D,IAAI;QACF,MAAM,YAAY,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;YACpD,MAAM,OAAO,IAAI;YACjB,cAAc,OAAO,YAAY;YACjC,OAAQ,OAAO,KAAK,IAAI,EAAE;YAC1B,OAAO,OAAO,KAAK,IAAI;YACvB,aAAa,OAAO,WAAW;YAC/B,OAAO,OAAO,KAAK;QACrB;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACR;AACF;AAEO,eAAe,gBAAgB,WAAmB,EAAE,MAA0B;IACnF,IAAI;QACF,MAAM,YAAY,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CACnD,aACA;YACE,MAAM,OAAO,IAAI;YACjB,cAAc,OAAO,YAAY;YACjC,OAAQ,OAAO,KAAK,IAAI,EAAE;YAC1B,OAAO,OAAO,KAAK;YACnB,aAAa,OAAO,WAAW;YAC/B,OAAO,OAAO,KAAK;QACrB;QAEF,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACR;AACF;AAEO,eAAe,eAAe,WAAmB,EAAE,OAAe;IACvE,IAAI;QACF,MAAM,SAAS,MAAM,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;QAC/C,MAAM,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;YACnD,MAAM;YACN;QACF;QAEA,MAAM,MAAM,MAAM,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;YAC3D,cAAc;QAChB;QAEA,sBAAsB;QACtB,MAAM,WAAW,MAAM,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE;QAClE,MAAM,mBAAmB,SAAS,IAAI,CAAC,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI,KAAK;QAEhE,IAAI,CAAC,kBAAkB,OAAO,CAAC,EAAE,EAAE,OAAO;QAE1C,MAAM,gBAAgB,iBAAiB,OAAO,CAAC,EAAE;QACjD,IAAI,cAAc,IAAI,KAAK,QAAQ;YACjC,OAAO,cAAc,IAAI,CAAC,KAAK;QACjC;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACR;AACF"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Assistant/AssistantCreator.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Assistant } from '@/types';\nimport { createAssistant } from '@/services/openai';\n\nexport default function AssistantCreator({\n  onClose,\n  onCreated\n}: {\n  onClose: () => void;\n  onCreated: (assistant: Assistant) => void;\n}) {\n  const [formData, setFormData] = useState({\n    name: '',\n    instructions: '',\n    model: 'gpt-4',\n    temperature: 0.7,\n    tools: [{ type: 'code_interpreter' } as const]\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const assistant = await createAssistant(formData);\n      onCreated(assistant as Assistant);\n    } catch (error) {\n      console.error('Error creating assistant:', error);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n      <div className=\"bg-white p-6 rounded-lg w-96\">\n        <h2 className=\"text-xl font-bold mb-4\">Create New Assistant</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label className=\"block mb-2\">Name</label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n              className=\"w-full border rounded p-2\"\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block mb-2\">Instructions</label>\n            <textarea\n              value={formData.instructions}\n              onChange={(e) => setFormData({ ...formData, instructions: e.target.value })}\n              className=\"w-full border rounded p-2\"\n              rows={4}\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block mb-2\">Temperature</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={formData.temperature}\n              onChange={(e) => setFormData({ ...formData, temperature: parseFloat(e.target.value) })}\n              className=\"w-full\"\n            />\n            <span>{formData.temperature}</span>\n          </div>\n          <div className=\"flex justify-end gap-2\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"px-4 py-2 border rounded\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className=\"px-4 py-2 bg-blue-500 text-white rounded\"\n            >\n              Create\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEe,SAAS,iBAAiB,EACvC,OAAO,EACP,SAAS,EAIV;IACC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,MAAM;QACN,cAAc;QACd,OAAO;QACP,aAAa;QACb,OAAO;YAAC;gBAAE,MAAM;YAAmB;SAAW;IAChD;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI;YACF,MAAM,YAAY,MAAM,CAAA,GAAA,yHAAA,CAAA,kBAAe,AAAD,EAAE;YACxC,UAAU;QACZ,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAyB;;;;;;8BACvC,8OAAC;oBAAK,UAAU;;sCACd,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,WAAU;8CAAa;;;;;;8CAC9B,8OAAC;oCACC,MAAK;oCACL,OAAO,SAAS,IAAI;oCACpB,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,MAAM,EAAE,MAAM,CAAC,KAAK;wCAAC;oCACjE,WAAU;oCACV,QAAQ;;;;;;;;;;;;sCAGZ,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,WAAU;8CAAa;;;;;;8CAC9B,8OAAC;oCACC,OAAO,SAAS,YAAY;oCAC5B,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,cAAc,EAAE,MAAM,CAAC,KAAK;wCAAC;oCACzE,WAAU;oCACV,MAAM;oCACN,QAAQ;;;;;;;;;;;;sCAGZ,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,WAAU;8CAAa;;;;;;8CAC9B,8OAAC;oCACC,MAAK;oCACL,KAAI;oCACJ,KAAI;oCACJ,MAAK;oCACL,OAAO,SAAS,WAAW;oCAC3B,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,aAAa,WAAW,EAAE,MAAM,CAAC,KAAK;wCAAE;oCACpF,WAAU;;;;;;8CAEZ,8OAAC;8CAAM,SAAS,WAAW;;;;;;;;;;;;sCAE7B,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,MAAK;oCACL,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,MAAK;oCACL,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb"}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Assistant/AssistantSettings.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Assistant } from '@/types';\nimport { updateAssistant } from '@/services/openai';\nimport OpenAI from 'openai';\n\nif (!process.env.NEXT_PUBLIC_OPENAI_API_KEY) {\n  throw new Error('Missing OpenAI API Key');\n}\n\nconst openai = new OpenAI({\n  apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true // Note: In production, you should use API routes\n});\n\nexport default function AssistantSettings({\n  assistant,\n  onUpdate\n}: {\n  assistant: Assistant;\n  onUpdate: (assistant: Assistant) => void;\n}) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState(assistant);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const updated = await updateAssistant(assistant.id, formData);\n      onUpdate(updated as Assistant);\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error updating assistant:', error);\n    }\n  };\n\n  if (!isEditing) {\n    return (\n      <div className=\"p-4 border rounded\">\n        <h3 className=\"font-bold mb-2\">{assistant.name}</h3>\n        <p className=\"text-sm mb-4\">{assistant.instructions}</p>\n        <button\n          onClick={() => setIsEditing(true)}\n          className=\"text-blue-500\"\n        >\n          Edit Settings\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"p-4 border rounded\">\n      <div className=\"mb-4\">\n        <label className=\"block mb-2\">Name</label>\n        <input\n          type=\"text\"\n          value={formData.name}\n          onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n          className=\"w-full border rounded p-2\"\n        />\n      </div>\n      <div className=\"mb-4\">\n        <label className=\"block mb-2\">Instructions</label>\n        <textarea\n          value={formData.instructions}\n          onChange={(e) => setFormData({ ...formData, instructions: e.target.value })}\n          className=\"w-full border rounded p-2\"\n          rows={4}\n        />\n      </div>\n      <div className=\"mb-4\">\n        <label className=\"block mb-2\">Temperature</label>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          value={formData.temperature || 0.7}\n          onChange={(e) => setFormData({ ...formData, temperature: parseFloat(e.target.value) })}\n          className=\"w-full\"\n        />\n        <span>{formData.temperature}</span>\n      </div>\n      <div className=\"flex justify-end gap-2\">\n        <button\n          type=\"button\"\n          onClick={() => setIsEditing(false)}\n          className=\"px-4 py-2 border rounded\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          className=\"px-4 py-2 bg-blue-500 text-white rounded\"\n        >\n          Save\n        </button>\n      </div>\n    </form>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;;AAEA,uCAA6C;;AAE7C;AAEA,MAAM,SAAS,IAAI,gJAAA,CAAA,UAAM,CAAC;IACxB,MAAM;IACN,yBAAyB,KAAK,iDAAiD;AACjF;AAEe,SAAS,kBAAkB,EACxC,SAAS,EACT,QAAQ,EAIT;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI;YACF,MAAM,UAAU,MAAM,CAAA,GAAA,yHAAA,CAAA,kBAAe,AAAD,EAAE,UAAU,EAAE,EAAE;YACpD,SAAS;YACT,aAAa;QACf,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,IAAI,CAAC,WAAW;QACd,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAkB,UAAU,IAAI;;;;;;8BAC9C,8OAAC;oBAAE,WAAU;8BAAgB,UAAU,YAAY;;;;;;8BACnD,8OAAC;oBACC,SAAS,IAAM,aAAa;oBAC5B,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,qBACE,8OAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAAa;;;;;;kCAC9B,8OAAC;wBACC,MAAK;wBACL,OAAO,SAAS,IAAI;wBACpB,UAAU,CAAC,IAAM,YAAY;gCAAE,GAAG,QAAQ;gCAAE,MAAM,EAAE,MAAM,CAAC,KAAK;4BAAC;wBACjE,WAAU;;;;;;;;;;;;0BAGd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAAa;;;;;;kCAC9B,8OAAC;wBACC,OAAO,SAAS,YAAY;wBAC5B,UAAU,CAAC,IAAM,YAAY;gCAAE,GAAG,QAAQ;gCAAE,cAAc,EAAE,MAAM,CAAC,KAAK;4BAAC;wBACzE,WAAU;wBACV,MAAM;;;;;;;;;;;;0BAGV,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAAa;;;;;;kCAC9B,8OAAC;wBACC,MAAK;wBACL,KAAI;wBACJ,KAAI;wBACJ,MAAK;wBACL,OAAO,SAAS,WAAW,IAAI;wBAC/B,UAAU,CAAC,IAAM,YAAY;gCAAE,GAAG,QAAQ;gCAAE,aAAa,WAAW,EAAE,MAAM,CAAC,KAAK;4BAAE;wBACpF,WAAU;;;;;;kCAEZ,8OAAC;kCAAM,SAAS,WAAW;;;;;;;;;;;;0BAE7B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,MAAK;wBACL,SAAS,IAAM,aAAa;wBAC5B,WAAU;kCACX;;;;;;kCAGD,8OAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT"}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Layout/Sidebar.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Assistant } from '@/types';\nimport AssistantCreator from '@/components/Assistant/AssistantCreator';\nimport AssistantSettings from '@/components/Assistant/AssistantSettings';\n\ninterface SidebarProps {\n  activeAssistant: Assistant | null;\n  onAssistantChange: (assistant: Assistant) => void;\n}\n\nexport default function Sidebar({ activeAssistant, onAssistantChange }: SidebarProps) {\n  const [isCreating, setIsCreating] = useState(false);\n\n  return (\n    <div className=\"p-4\">\n      <button\n        onClick={() => setIsCreating(true)}\n        className=\"w-full bg-blue-500 text-white rounded-md py-2 mb-4\"\n      >\n        Create New Assistant\n      </button>\n\n      {isCreating && (\n        <AssistantCreator\n          onClose={() => setIsCreating(false)}\n          onCreated={(assistant) => {\n            onAssistantChange(assistant);\n            setIsCreating(false);\n          }}\n        />\n      )}\n\n      {activeAssistant && (\n        <AssistantSettings\n          assistant={activeAssistant}\n          onUpdate={onAssistantChange}\n        />\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;;AAOe,SAAS,QAAQ,EAAE,eAAe,EAAE,iBAAiB,EAAgB;IAClF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,SAAS,IAAM,cAAc;gBAC7B,WAAU;0BACX;;;;;;YAIA,4BACC,8OAAC,mJAAA,CAAA,UAAgB;gBACf,SAAS,IAAM,cAAc;gBAC7B,WAAW,CAAC;oBACV,kBAAkB;oBAClB,cAAc;gBAChB;;;;;;YAIH,iCACC,8OAAC,oJAAA,CAAA,UAAiB;gBAChB,WAAW;gBACX,UAAU;;;;;;;;;;;;AAKpB"}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Chat/MessageList.tsx"],"sourcesContent":["import { Message } from '@/types';\n\nexport default function MessageList({ messages }: { messages: Message[] }) {\n  return (\n    <div className=\"space-y-4\">\n      {messages.map((message) => (\n        <div\n          key={message.id}\n          className={`p-4 rounded-lg ${\n            message.role === 'user' ? 'bg-blue-100 ml-8' : 'bg-gray-100 mr-8'\n          }`}\n        >\n          <div className=\"font-bold mb-1\">\n            {message.role === 'user' ? 'You' : 'Assistant'}\n          </div>\n          <div>{message.content}</div>\n        </div>\n      ))}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAEe,SAAS,YAAY,EAAE,QAAQ,EAA2B;IACvE,qBACE,8OAAC;QAAI,WAAU;kBACZ,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;gBAEC,WAAW,CAAC,eAAe,EACzB,QAAQ,IAAI,KAAK,SAAS,qBAAqB,oBAC/C;;kCAEF,8OAAC;wBAAI,WAAU;kCACZ,QAAQ,IAAI,KAAK,SAAS,QAAQ;;;;;;kCAErC,8OAAC;kCAAK,QAAQ,OAAO;;;;;;;eARhB,QAAQ,EAAE;;;;;;;;;;AAazB"}},
    {"offset": {"line": 713, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 719, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Chat/VoiceControls.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function VoiceControls({\n  isRecording,\n  onRecordingChange,\n  onTranscript\n}: {\n  isRecording: boolean;\n  onRecordingChange: (isRecording: boolean) => void;\n  onTranscript: (transcript: string) => void;\n}) {\n  const [recognition, setRecognition] = useState<any>(null);\n\n  useEffect(() => {\n    if (typeof window !== 'undefined' && 'webkitSpeechRecognition' in window) {\n      const SpeechRecognition = window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n\n      recognition.onresult = (event: any) => {\n        const transcript = Array.from(event.results)\n          .map((result: any) => result[0])\n          .map((result) => result.transcript)\n          .join('');\n\n        if (event.results[0].isFinal) {\n          onTranscript(transcript);\n          onRecordingChange(false);\n        }\n      };\n\n      recognition.onerror = (event: any) => {\n        console.error('Speech recognition error:', event.error);\n        onRecordingChange(false);\n      };\n\n      setRecognition(recognition);\n    }\n  }, [onRecordingChange, onTranscript]);\n\n  const toggleRecording = () => {\n    if (recognition) {\n      if (isRecording) {\n        recognition.stop();\n      } else {\n        recognition.start();\n      }\n      onRecordingChange(!isRecording);\n    }\n  };\n\n  if (!recognition) {\n    return null;\n  }\n\n  return (\n    <button\n      onClick={toggleRecording}\n      className={`mb-2 px-4 py-2 rounded-lg ${\n        isRecording ? 'bg-red-500' : 'bg-gray-500'\n      } text-white`}\n    >\n      {isRecording ? 'Stop Recording' : 'Start Recording'}\n    </button>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,cAAc,EACpC,WAAW,EACX,iBAAiB,EACjB,YAAY,EAKb;IACC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO;IAEpD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,gBAAkB,eAAe,6BAA6B,QAAQ;;QAwB1E;IACF,GAAG;QAAC;QAAmB;KAAa;IAEpC,MAAM,kBAAkB;QACtB,IAAI,aAAa;YACf,IAAI,aAAa;gBACf,YAAY,IAAI;YAClB,OAAO;gBACL,YAAY,KAAK;YACnB;YACA,kBAAkB,CAAC;QACrB;IACF;IAEA,IAAI,CAAC,aAAa;QAChB,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,SAAS;QACT,WAAW,CAAC,0BAA0B,EACpC,cAAc,eAAe,cAC9B,WAAW,CAAC;kBAEZ,cAAc,mBAAmB;;;;;;AAGxC"}},
    {"offset": {"line": 759, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Chat/ChatInterface.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { Assistant, Message } from '@/types';\nimport { processMessage } from '@/services/openai';\nimport MessageList from './MessageList';\nimport VoiceControls from './VoiceControls';\nimport TextInput from './TextInput';\n\nexport default function ChatInterface({\n  assistant\n}: {\n  assistant: Assistant | null;\n}) {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = async (content: string) => {\n    if (!assistant || !content.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      role: 'user',\n      content,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setIsProcessing(true);\n\n    try {\n      // We'll implement this in the OpenAI service\n      const response = await processMessage(assistant.id, content);\n      \n      const assistantMessage: Message = {\n        id: Date.now().toString(),\n        role: 'assistant',\n        content: response,\n        timestamp: new Date()\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (error) {\n      console.error('Error processing message:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex-1 overflow-y-auto p-4\">\n        <MessageList messages={messages} />\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"border-t p-4\">\n        <VoiceControls\n          isRecording={isRecording}\n          onRecordingChange={setIsRecording}\n          onTranscript={handleSendMessage}\n        />\n        <TextInput\n          onSendMessage={handleSendMessage}\n          isProcessing={isProcessing}\n          disabled={!assistant || isRecording}\n        />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;AAGe,SAAS,cAAc,EACpC,SAAS,EAGV;IACC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE9C,MAAM,iBAAiB;QACrB,eAAe,OAAO,EAAE,eAAe;YAAE,UAAU;QAAS;IAC9D;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,oBAAoB,OAAO;QAC/B,IAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,IAAI;QAEnC,MAAM,cAAuB;YAC3B,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,MAAM;YACN;YACA,WAAW,IAAI;QACjB;QAEA,YAAY,CAAA,OAAQ;mBAAI;gBAAM;aAAY;QAC1C,gBAAgB;QAEhB,IAAI;YACF,6CAA6C;YAC7C,MAAM,WAAW,MAAM,CAAA,GAAA,yHAAA,CAAA,iBAAc,AAAD,EAAE,UAAU,EAAE,EAAE;YAEpD,MAAM,mBAA4B;gBAChC,IAAI,KAAK,GAAG,GAAG,QAAQ;gBACvB,MAAM;gBACN,SAAS;gBACT,WAAW,IAAI;YACjB;YAEA,YAAY,CAAA,OAAQ;uBAAI;oBAAM;iBAAiB;QACjD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,yIAAA,CAAA,UAAW;wBAAC,UAAU;;;;;;kCACvB,8OAAC;wBAAI,KAAK;;;;;;;;;;;;0BAEZ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,2IAAA,CAAA,UAAa;wBACZ,aAAa;wBACb,mBAAmB;wBACnB,cAAc;;;;;;kCAEhB,8OAAC;wBACC,eAAe;wBACf,cAAc;wBACd,UAAU,CAAC,aAAa;;;;;;;;;;;;;;;;;;AAKlC"}},
    {"offset": {"line": 891, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 897, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Assistant } from '@/types';\nimport SplitScreen from '@/components/Layout/SplitScreen';\nimport Sidebar from '@/components/Layout/Sidebar';\nimport ChatInterface from '@/components/Chat/ChatInterface';\n\nexport default function Home() {\n  const [activeAssistant, setActiveAssistant] = useState<Assistant | null>(null);\n\n  return (\n    <main className=\"h-screen\">\n      <SplitScreen\n        sidebar={\n          <Sidebar\n            activeAssistant={activeAssistant}\n            onAssistantChange={setActiveAssistant}\n          />\n        }\n        content={\n          <ChatInterface\n            assistant={activeAssistant}\n          />\n        }\n      />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AANA;;;;;;AAQe,SAAS;IACtB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IAEzE,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC,2IAAA,CAAA,UAAW;YACV,uBACE,8OAAC,uIAAA,CAAA,UAAO;gBACN,iBAAiB;gBACjB,mBAAmB;;;;;;YAGvB,uBACE,8OAAC,2IAAA,CAAA,UAAa;gBACZ,WAAW;;;;;;;;;;;;;;;;AAMvB"}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}