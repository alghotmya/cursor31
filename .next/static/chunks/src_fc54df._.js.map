{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Layout/SplitScreen.tsx"],"sourcesContent":["import { ReactNode } from 'react';\n\ninterface SplitScreenProps {\n  sidebar: ReactNode;\n  content: ReactNode;\n}\n\nexport default function SplitScreen({ sidebar, content }: SplitScreenProps) {\n  return (\n    <div className=\"flex h-full\">\n      <div className=\"w-80 border-r\">\n        {sidebar}\n      </div>\n      <div className=\"flex-1\">\n        {content}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAOe,SAAS,YAAY,EAAE,OAAO,EAAE,OAAO,EAAoB;IACxE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACZ;;;;;;0BAEH,6LAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAIT;KAXwB"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/services/openai.ts"],"sourcesContent":["import OpenAI from 'openai';\nimport { Assistant, Message } from '@/types';\n\nif (!process.env.NEXT_PUBLIC_OPENAI_API_KEY) {\n  throw new Error('Missing OpenAI API Key');\n}\n\nconst openai = new OpenAI({\n  apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\n\nexport async function createAssistant(config: Partial<Assistant>) {\n  try {\n    const assistant = await openai.beta.assistants.create({\n      name: config.name,\n      instructions: config.instructions,\n      tools: (config.tools || []) as any,\n      model: config.model || \"gpt-4o\",\n      temperature: config.temperature,\n      top_p: config.top_p\n    });\n    return assistant;\n  } catch (error) {\n    console.error('Error creating assistant:', error);\n    throw error;\n  }\n}\n\nexport async function updateAssistant(assistantId: string, config: Partial<Assistant>) {\n  try {\n    const assistant = await openai.beta.assistants.update(\n      assistantId,\n      {\n        name: config.name,\n        instructions: config.instructions,\n        tools: (config.tools || []) as any,\n        model: config.model,\n        temperature: config.temperature,\n        top_p: config.top_p\n      }\n    );\n    return assistant;\n  } catch (error) {\n    console.error('Error updating assistant:', error);\n    throw error;\n  }\n}\n\nexport async function processMessage(assistantId: string, content: string) {\n  try {\n    const thread = await openai.beta.threads.create();\n    await openai.beta.threads.messages.create(thread.id, {\n      role: 'user',\n      content: content\n    });\n\n    const run = await openai.beta.threads.runs.create(thread.id, {\n      assistant_id: assistantId\n    });\n\n    let runStatus = await openai.beta.threads.runs.retrieve(thread.id, run.id);\n    \n    while (runStatus.status !== 'completed') {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      runStatus = await openai.beta.threads.runs.retrieve(thread.id, run.id);\n\n      if (runStatus.status === 'failed') {\n        throw new Error('Run failed');\n      }\n    }\n\n    const messages = await openai.beta.threads.messages.list(thread.id);\n    const lastMessage = messages.data\n      .filter(msg => msg.role === 'assistant')\n      .pop();\n\n    if (!lastMessage?.content[0]) return 'No response';\n    \n    const content_block = lastMessage.content[0];\n    if (content_block.type === 'text') {\n      return content_block.text.value;\n    }\n    \n    return 'Unsupported response type';\n  } catch (error) {\n    console.error('Error processing message:', error);\n    throw error;\n  }\n}\n\n// Add text-to-speech function\nexport async function generateSpeech(text: string) {\n  try {\n    const mp3 = await openai.audio.speech.create({\n      model: \"tts-1\",\n      voice: \"alloy\",\n      input: text,\n    });\n\n    const blob = new Blob([await mp3.arrayBuffer()], { type: 'audio/mpeg' });\n    return URL.createObjectURL(blob);\n  } catch (error) {\n    console.error('Error generating speech:', error);\n    throw error;\n  }\n}\n\ntype OpenAIVoice = 'alloy' | 'echo' | 'fable' | 'onyx' | 'nova' | 'shimmer';\n\nexport class VoiceService {\n  private static instance: VoiceService;\n  private openai: OpenAI;\n  private audioContext: AudioContext | null = null;\n  private audioQueue: string[] = [];\n  private isPlaying: boolean = false;\n\n  private constructor() {\n    this.openai = new OpenAI({\n      apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY,\n      dangerouslyAllowBrowser: true\n    });\n    \n    if (typeof window !== 'undefined') {\n      this.audioContext = new AudioContext();\n    }\n  }\n\n  static getInstance(): VoiceService {\n    if (!VoiceService.instance) {\n      VoiceService.instance = new VoiceService();\n    }\n    return VoiceService.instance;\n  }\n\n  async textToSpeech(text: string, voice: OpenAIVoice = 'alloy'): Promise<void> {\n    try {\n      const response = await this.openai.audio.speech.create({\n        model: \"tts-1\",\n        voice,\n        input: text,\n      });\n\n      const arrayBuffer = await response.arrayBuffer();\n      if (this.audioContext) {\n        const audioBuffer = await this.audioContext.decodeAudioData(arrayBuffer);\n        const source = this.audioContext.createBufferSource();\n        source.buffer = audioBuffer;\n        source.connect(this.audioContext.destination);\n        source.start(0);\n      }\n    } catch (error) {\n      console.error('Error in text-to-speech:', error);\n      throw error;\n    }\n  }\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Assistant/AssistantCreator.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Assistant } from '@/types';\nimport { createAssistant } from '@/services/openai';\n\nexport default function AssistantCreator({\n  onClose,\n  onCreated\n}: {\n  onClose: () => void;\n  onCreated: (assistant: Assistant) => void;\n}) {\n  const [formData, setFormData] = useState({\n    name: '',\n    instructions: '',\n    model: 'gpt-4',\n    temperature: 0.7,\n    tools: [{ type: 'code_interpreter' } as const]\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const assistant = await createAssistant(formData);\n      onCreated(assistant as Assistant);\n    } catch (error) {\n      console.error('Error creating assistant:', error);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n      <div className=\"bg-white p-6 rounded-lg w-96\">\n        <h2 className=\"text-xl font-bold mb-4\">Create New Assistant</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label className=\"block mb-2\">Name</label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n              className=\"w-full border rounded p-2\"\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block mb-2\">Instructions</label>\n            <textarea\n              value={formData.instructions}\n              onChange={(e) => setFormData({ ...formData, instructions: e.target.value })}\n              className=\"w-full border rounded p-2\"\n              rows={4}\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block mb-2\">Temperature</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={formData.temperature}\n              onChange={(e) => setFormData({ ...formData, temperature: parseFloat(e.target.value) })}\n              className=\"w-full\"\n            />\n            <span>{formData.temperature}</span>\n          </div>\n          <div className=\"flex justify-end gap-2\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"px-4 py-2 border rounded\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className=\"px-4 py-2 bg-blue-500 text-white rounded\"\n            >\n              Create\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AAEA;;;;;AAEe,SAAS,iBAAiB,EACvC,OAAO,EACP,SAAS,EAIV;;IACC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,MAAM;QACN,cAAc;QACd,OAAO;QACP,aAAa;QACb,OAAO;YAAC;gBAAE,MAAM;YAAmB;SAAW;IAChD;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI;YACF,MAAM,YAAY,MAAM,CAAA,GAAA,4HAAA,CAAA,kBAAe,AAAD,EAAE;YACxC,UAAU;QACZ,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAyB;;;;;;8BACvC,6LAAC;oBAAK,UAAU;;sCACd,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,WAAU;8CAAa;;;;;;8CAC9B,6LAAC;oCACC,MAAK;oCACL,OAAO,SAAS,IAAI;oCACpB,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,MAAM,EAAE,MAAM,CAAC,KAAK;wCAAC;oCACjE,WAAU;oCACV,QAAQ;;;;;;;;;;;;sCAGZ,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,WAAU;8CAAa;;;;;;8CAC9B,6LAAC;oCACC,OAAO,SAAS,YAAY;oCAC5B,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,cAAc,EAAE,MAAM,CAAC,KAAK;wCAAC;oCACzE,WAAU;oCACV,MAAM;oCACN,QAAQ;;;;;;;;;;;;sCAGZ,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,WAAU;8CAAa;;;;;;8CAC9B,6LAAC;oCACC,MAAK;oCACL,KAAI;oCACJ,KAAI;oCACJ,MAAK;oCACL,OAAO,SAAS,WAAW;oCAC3B,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,aAAa,WAAW,EAAE,MAAM,CAAC,KAAK;wCAAE;oCACpF,WAAU;;;;;;8CAEZ,6LAAC;8CAAM,SAAS,WAAW;;;;;;;;;;;;sCAE7B,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,MAAK;oCACL,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,6LAAC;oCACC,MAAK;oCACL,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;GAlFwB;KAAA"}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Assistant/AssistantSettings.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Assistant } from '@/types';\nimport { updateAssistant } from '@/services/openai';\nimport OpenAI from 'openai';\n\nif (!process.env.NEXT_PUBLIC_OPENAI_API_KEY) {\n  throw new Error('Missing OpenAI API Key');\n}\n\nconst openai = new OpenAI({\n  apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true // Note: In production, you should use API routes\n});\n\nexport default function AssistantSettings({\n  assistant,\n  onUpdate\n}: {\n  assistant: Assistant;\n  onUpdate: (assistant: Assistant) => void;\n}) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState(assistant);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const updated = await updateAssistant(assistant.id, formData);\n      onUpdate(updated as Assistant);\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error updating assistant:', error);\n    }\n  };\n\n  if (!isEditing) {\n    return (\n      <div className=\"p-4 border rounded\">\n        <h3 className=\"font-bold mb-2\">{assistant.name}</h3>\n        <p className=\"text-sm mb-4\">{assistant.instructions}</p>\n        <button\n          onClick={() => setIsEditing(true)}\n          className=\"text-blue-500\"\n        >\n          Edit Settings\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"p-4 border rounded\">\n      <div className=\"mb-4\">\n        <label className=\"block mb-2\">Name</label>\n        <input\n          type=\"text\"\n          value={formData.name}\n          onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n          className=\"w-full border rounded p-2\"\n        />\n      </div>\n      <div className=\"mb-4\">\n        <label className=\"block mb-2\">Instructions</label>\n        <textarea\n          value={formData.instructions}\n          onChange={(e) => setFormData({ ...formData, instructions: e.target.value })}\n          className=\"w-full border rounded p-2\"\n          rows={4}\n        />\n      </div>\n      <div className=\"mb-4\">\n        <label className=\"block mb-2\">Temperature</label>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          value={formData.temperature || 0.7}\n          onChange={(e) => setFormData({ ...formData, temperature: parseFloat(e.target.value) })}\n          className=\"w-full\"\n        />\n        <span>{formData.temperature}</span>\n      </div>\n      <div className=\"flex justify-end gap-2\">\n        <button\n          type=\"button\"\n          onClick={() => setIsEditing(false)}\n          className=\"px-4 py-2 border rounded\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          className=\"px-4 py-2 bg-blue-500 text-white rounded\"\n        >\n          Save\n        </button>\n      </div>\n    </form>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AAEA;AAGK;AAFL;;;;;;AAEA,uCAA6C;;AAE7C;AAEA,MAAM,SAAS,IAAI,mJAAA,CAAA,UAAM,CAAC;IACxB,MAAM;IACN,yBAAyB,KAAK,iDAAiD;AACjF;AAEe,SAAS,kBAAkB,EACxC,SAAS,EACT,QAAQ,EAIT;;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI;YACF,MAAM,UAAU,MAAM,CAAA,GAAA,4HAAA,CAAA,kBAAe,AAAD,EAAE,UAAU,EAAE,EAAE;YACpD,SAAS;YACT,aAAa;QACf,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,IAAI,CAAC,WAAW;QACd,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAkB,UAAU,IAAI;;;;;;8BAC9C,6LAAC;oBAAE,WAAU;8BAAgB,UAAU,YAAY;;;;;;8BACnD,6LAAC;oBACC,SAAS,IAAM,aAAa;oBAC5B,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,qBACE,6LAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,WAAU;kCAAa;;;;;;kCAC9B,6LAAC;wBACC,MAAK;wBACL,OAAO,SAAS,IAAI;wBACpB,UAAU,CAAC,IAAM,YAAY;gCAAE,GAAG,QAAQ;gCAAE,MAAM,EAAE,MAAM,CAAC,KAAK;4BAAC;wBACjE,WAAU;;;;;;;;;;;;0BAGd,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,WAAU;kCAAa;;;;;;kCAC9B,6LAAC;wBACC,OAAO,SAAS,YAAY;wBAC5B,UAAU,CAAC,IAAM,YAAY;gCAAE,GAAG,QAAQ;gCAAE,cAAc,EAAE,MAAM,CAAC,KAAK;4BAAC;wBACzE,WAAU;wBACV,MAAM;;;;;;;;;;;;0BAGV,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,WAAU;kCAAa;;;;;;kCAC9B,6LAAC;wBACC,MAAK;wBACL,KAAI;wBACJ,KAAI;wBACJ,MAAK;wBACL,OAAO,SAAS,WAAW,IAAI;wBAC/B,UAAU,CAAC,IAAM,YAAY;gCAAE,GAAG,QAAQ;gCAAE,aAAa,WAAW,EAAE,MAAM,CAAC,KAAK;4BAAE;wBACpF,WAAU;;;;;;kCAEZ,6LAAC;kCAAM,SAAS,WAAW;;;;;;;;;;;;0BAE7B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,MAAK;wBACL,SAAS,IAAM,aAAa;wBAC5B,WAAU;kCACX;;;;;;kCAGD,6LAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT;GAtFwB;KAAA"}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Layout/Sidebar.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Assistant } from '@/types';\nimport AssistantCreator from '@/components/Assistant/AssistantCreator';\nimport AssistantSettings from '@/components/Assistant/AssistantSettings';\n\ninterface SidebarProps {\n  activeAssistant: Assistant | null;\n  onAssistantChange: (assistant: Assistant) => void;\n}\n\nexport default function Sidebar({ activeAssistant, onAssistantChange }: SidebarProps) {\n  const [isCreating, setIsCreating] = useState(false);\n\n  return (\n    <div className=\"p-4\">\n      <button\n        onClick={() => setIsCreating(true)}\n        className=\"w-full bg-blue-500 text-white rounded-md py-2 mb-4\"\n      >\n        Create New Assistant\n      </button>\n\n      {isCreating && (\n        <AssistantCreator\n          onClose={() => setIsCreating(false)}\n          onCreated={(assistant) => {\n            onAssistantChange(assistant);\n            setIsCreating(false);\n          }}\n        />\n      )}\n\n      {activeAssistant && (\n        <AssistantSettings\n          assistant={activeAssistant}\n          onUpdate={onAssistantChange}\n        />\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;;;AAOe,SAAS,QAAQ,EAAE,eAAe,EAAE,iBAAiB,EAAgB;;IAClF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,SAAS,IAAM,cAAc;gBAC7B,WAAU;0BACX;;;;;;YAIA,4BACC,6LAAC,sJAAA,CAAA,UAAgB;gBACf,SAAS,IAAM,cAAc;gBAC7B,WAAW,CAAC;oBACV,kBAAkB;oBAClB,cAAc;gBAChB;;;;;;YAIH,iCACC,6LAAC,uJAAA,CAAA,UAAiB;gBAChB,WAAW;gBACX,UAAU;;;;;;;;;;;;AAKpB;GA9BwB;KAAA"}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Chat/MessageList.tsx"],"sourcesContent":["import { Message } from '@/types';\n\nexport default function MessageList({ messages }: { messages: Message[] }) {\n  return (\n    <div className=\"space-y-4\">\n      {messages.map((message) => (\n        <div\n          key={message.id}\n          className={`p-4 rounded-lg ${\n            message.role === 'user' ? 'bg-blue-100 ml-8' : 'bg-gray-100 mr-8'\n          }`}\n        >\n          <div className=\"font-bold mb-1\">\n            {message.role === 'user' ? 'You' : 'Assistant'}\n          </div>\n          <div>{message.content}</div>\n        </div>\n      ))}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAEe,SAAS,YAAY,EAAE,QAAQ,EAA2B;IACvE,qBACE,6LAAC;QAAI,WAAU;kBACZ,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC;gBAEC,WAAW,CAAC,eAAe,EACzB,QAAQ,IAAI,KAAK,SAAS,qBAAqB,oBAC/C;;kCAEF,6LAAC;wBAAI,WAAU;kCACZ,QAAQ,IAAI,KAAK,SAAS,QAAQ;;;;;;kCAErC,6LAAC;kCAAK,QAAQ,OAAO;;;;;;;eARhB,QAAQ,EAAE;;;;;;;;;;AAazB;KAlBwB"}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Chat/InputArea.tsx"],"sourcesContent":["import { useState } from 'react';\n\ninterface InputAreaProps {\n  onSendMessage: (message: string) => void;\n  isProcessing: boolean;\n  disabled: boolean;\n}\n\nexport default function InputArea({ onSendMessage, isProcessing, disabled }: InputAreaProps) {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (input.trim() && !isProcessing && !disabled) {\n      onSendMessage(input.trim());\n      setInput('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"flex gap-2\">\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        disabled={isProcessing || disabled}\n        placeholder={disabled ? 'Select an assistant to start chatting' : 'Type a message...'}\n        className=\"flex-1 p-2 border rounded\"\n      />\n      <button\n        type=\"submit\"\n        disabled={!input.trim() || isProcessing || disabled}\n        className=\"px-4 py-2 bg-blue-500 text-white rounded disabled:bg-gray-300\"\n      >\n        Send\n      </button>\n    </form>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;;AAQe,SAAS,UAAU,EAAE,aAAa,EAAE,YAAY,EAAE,QAAQ,EAAkB;;IACzF,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,MAAM,IAAI,MAAM,CAAC,gBAAgB,CAAC,UAAU;YAC9C,cAAc,MAAM,IAAI;YACxB,SAAS;QACX;IACF;IAEA,qBACE,6LAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,6LAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,UAAU,gBAAgB;gBAC1B,aAAa,WAAW,0CAA0C;gBAClE,WAAU;;;;;;0BAEZ,6LAAC;gBACC,MAAK;gBACL,UAAU,CAAC,MAAM,IAAI,MAAM,gBAAgB;gBAC3C,WAAU;0BACX;;;;;;;;;;;;AAKP;GA9BwB;KAAA"}},
    {"offset": {"line": 805, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Chat/VoiceControls.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function VoiceControls({\n  isRecording,\n  onRecordingChange,\n  onTranscript\n}: {\n  isRecording: boolean;\n  onRecordingChange: (isRecording: boolean) => void;\n  onTranscript: (transcript: string) => void;\n}) {\n  const [recognition, setRecognition] = useState<any>(null);\n\n  useEffect(() => {\n    if (typeof window !== 'undefined' && 'webkitSpeechRecognition' in window) {\n      const SpeechRecognition = window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n\n      recognition.onresult = (event: any) => {\n        const transcript = Array.from(event.results)\n          .map((result: any) => result[0])\n          .map((result) => result.transcript)\n          .join('');\n\n        if (event.results[0].isFinal) {\n          onTranscript(transcript);\n          onRecordingChange(false);\n        }\n      };\n\n      recognition.onerror = (event: any) => {\n        if (event.error !== 'aborted') {\n          console.error('Speech recognition error:', event.error);\n          onRecordingChange(false);\n        }\n      };\n\n      setRecognition(recognition);\n    }\n  }, [onRecordingChange, onTranscript]);\n\n  const toggleRecording = () => {\n    if (recognition) {\n      if (isRecording) {\n        recognition.stop();\n      } else {\n        recognition.start();\n      }\n      onRecordingChange(!isRecording);\n    }\n  };\n\n  if (!recognition) {\n    return null;\n  }\n\n  return (\n    <button\n      onClick={toggleRecording}\n      className={`mb-2 px-4 py-2 rounded-lg ${\n        isRecording ? 'bg-red-500' : 'bg-gray-500'\n      } text-white`}\n    >\n      {isRecording ? 'Stop Recording' : 'Start Recording'}\n    </button>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;;AAEe,SAAS,cAAc,EACpC,WAAW,EACX,iBAAiB,EACjB,YAAY,EAKb;;IACC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IAEpD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,aAAkB,eAAe,6BAA6B,QAAQ;gBACxE,MAAM,oBAAoB,OAAO,uBAAuB;gBACxD,MAAM,cAAc,IAAI;gBACxB,YAAY,UAAU,GAAG;gBACzB,YAAY,cAAc,GAAG;gBAE7B,YAAY,QAAQ;+CAAG,CAAC;wBACtB,MAAM,aAAa,MAAM,IAAI,CAAC,MAAM,OAAO,EACxC,GAAG;kEAAC,CAAC,SAAgB,MAAM,CAAC,EAAE;iEAC9B,GAAG;kEAAC,CAAC,SAAW,OAAO,UAAU;iEACjC,IAAI,CAAC;wBAER,IAAI,MAAM,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE;4BAC5B,aAAa;4BACb,kBAAkB;wBACpB;oBACF;;gBAEA,YAAY,OAAO;+CAAG,CAAC;wBACrB,IAAI,MAAM,KAAK,KAAK,WAAW;4BAC7B,QAAQ,KAAK,CAAC,6BAA6B,MAAM,KAAK;4BACtD,kBAAkB;wBACpB;oBACF;;gBAEA,eAAe;YACjB;QACF;kCAAG;QAAC;QAAmB;KAAa;IAEpC,MAAM,kBAAkB;QACtB,IAAI,aAAa;YACf,IAAI,aAAa;gBACf,YAAY,IAAI;YAClB,OAAO;gBACL,YAAY,KAAK;YACnB;YACA,kBAAkB,CAAC;QACrB;IACF;IAEA,IAAI,CAAC,aAAa;QAChB,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,SAAS;QACT,WAAW,CAAC,0BAA0B,EACpC,cAAc,eAAe,cAC9B,WAAW,CAAC;kBAEZ,cAAc,mBAAmB;;;;;;AAGxC;GAlEwB;KAAA"}},
    {"offset": {"line": 887, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/components/Chat/ChatInterface.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { Assistant, Message } from '@/types';\nimport MessageList from './MessageList';\nimport InputArea from './InputArea';\nimport VoiceControls from './VoiceControls';\nimport { processMessage, generateSpeech } from '@/services/openai';\nimport OpenAI from 'openai';\nimport { VoiceService } from '@/services/openai';\n\nexport default function ChatInterface({\n  assistant\n}: {\n  assistant: Assistant | null;\n}) {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioUrl, setAudioUrl] = useState<string | null>(null);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = async (content: string) => {\n    if (!assistant || !content.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      role: 'user',\n      content,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setIsProcessing(true);\n\n    try {\n      const response = await processMessage(assistant.id, content);\n      \n      const assistantMessage: Message = {\n        id: Date.now().toString(),\n        role: 'assistant',\n        content: response,\n        timestamp: new Date()\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n\n      // Generate and play audio response\n      const speechUrl = await generateSpeech(response);\n      setAudioUrl(speechUrl);\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n\n    } catch (error) {\n      console.error('Error processing message:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex-1 overflow-y-auto p-4\">\n        <MessageList messages={messages} />\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"border-t p-4\">\n        <VoiceControls\n          isRecording={isRecording}\n          onRecordingChange={setIsRecording}\n          onTranscript={handleSendMessage}\n        />\n        <InputArea\n          onSendMessage={handleSendMessage}\n          isProcessing={isProcessing}\n          disabled={!assistant || isRecording}\n        />\n        {audioUrl && <audio ref={audioRef} src={audioUrl} />}\n      </div>\n    </div>\n  );\n}\n\nexport function OpenAIConnectionTest() {\n  const [status, setStatus] = useState<'testing' | 'success' | 'error'>('testing');\n  const [error, setError] = useState<string>('');\n\n  useEffect(() => {\n    const testConnection = async () => {\n      try {\n        const openai = new OpenAI({\n          apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY,\n          dangerouslyAllowBrowser: true\n        });\n\n        // Try to list models as a connection test\n        await openai.models.list();\n        setStatus('success');\n      } catch (err) {\n        setStatus('error');\n        setError(err instanceof Error ? err.message : 'Unknown error');\n      }\n    };\n\n    testConnection();\n  }, []);\n\n  return (\n    <div className=\"fixed top-4 right-4 p-2 rounded-lg text-sm\">\n      {status === 'testing' && (\n        <span className=\"text-yellow-500\">Testing OpenAI connection...</span>\n      )}\n      {status === 'success' && (\n        <span className=\"text-green-500\">OpenAI connection successful!</span>\n      )}\n      {status === 'error' && (\n        <span className=\"text-red-500\">\n          OpenAI connection failed: {error}\n        </span>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1116, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmedalghotmy/Documents/cursor3/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Assistant } from '@/types';\nimport SplitScreen from '@/components/Layout/SplitScreen';\nimport Sidebar from '@/components/Layout/Sidebar';\nimport ChatInterface from '@/components/Chat/ChatInterface';\nimport { OpenAIConnectionTest } from '@/components/Chat/ChatInterface';\n\nexport default function Home() {\n  const [activeAssistant, setActiveAssistant] = useState<Assistant | null>(null);\n\n  return (\n    <main className=\"h-screen\">\n      <OpenAIConnectionTest />\n      <SplitScreen\n        sidebar={\n          <Sidebar\n            activeAssistant={activeAssistant}\n            onAssistantChange={setActiveAssistant}\n          />\n        }\n        content={\n          <ChatInterface\n            assistant={activeAssistant}\n          />\n        }\n      />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;;;AANA;;;;;;AASe,SAAS;;IACtB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;IAEzE,qBACE,6LAAC;QAAK,WAAU;;0BACd,6LAAC,8IAAA,CAAA,uBAAoB;;;;;0BACrB,6LAAC,8IAAA,CAAA,UAAW;gBACV,uBACE,6LAAC,0IAAA,CAAA,UAAO;oBACN,iBAAiB;oBACjB,mBAAmB;;;;;;gBAGvB,uBACE,6LAAC,8IAAA,CAAA,UAAa;oBACZ,WAAW;;;;;;;;;;;;;;;;;AAMvB;GArBwB;KAAA"}},
    {"offset": {"line": 1178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}